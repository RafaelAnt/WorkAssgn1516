comando para compilar:

gcc -O2 -o mmult_ijk  -L/usr/local/lib -I/usr/local/lib/include mmult_ijk.c -lpapi
gcc -O2 -o mmult_jik  -L/usr/local/lib -I/usr/local/lib/include mmult_jik.c -lpapi
gcc -O2 -o mmult_matB_only1  -L/usr/local/lib -I/usr/local/lib/include mmult_matB_only1.c -lpapi
gcc -O2 -o mmult_t  -L/usr/local/lib -I/usr/local/lib/include mmult_transposta.c -lpapi

-ftree-vectorize
-ftree-vectorizer-verbose

gcc -O2 -o mmult_t_vec -L/usr/local/lib -I/usr/local/lib/include mmult_t_vec.c -lpapi -march=native -fopt-info-optimized -ftree-vectorize

para o cluster:

gcc -O2 -o mmult_t_vec -L$PAPI_DIR/lib -I$PAPI_DIR/include mmult_t_vec.c -lpapi -march=native -fopt-info-optimized  -ftree-vectorize


2.1

Ver Papi_events.txt e Papi_Avail.txt

2.2

Ver mmult.c

2.3

ver mmult_diferent_order.c
comparação em comparacao.txt

2.3.1

//L1 cache = 32KB (por core)
//L2 cache = 256KB (por core)
//L3 cache = 6MB (partilhada)

//Size 40 = 18.75 KB
//Size 120 = 168.75 KB
//Size 600 = 4.12 MB
//Size 1000 = 11.444 MB

2.3.2

B =

1.000000 1.000000 1.000000 1.000000
1.000000 1.000000 1.000000 1.000000
1.000000 1.000000 1.000000 1.000000
1.000000 1.000000 1.000000 1.000000

B*A = colunas iguais
A*B = linhas iguais

(diferente do enunciado)

2.3.3

Utilizamos k best
K = 3
Medições = 8
Tolerancia = 5%

2.3.4















































































//
